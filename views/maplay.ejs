<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
  <head>
    <title><%= title %> - Microblog</title>
    <link rel='stylesheet' href='/stylesheets/bootstrap.css' />
	<style type="text/css">
	  body{
	    padding-top: 60px;
		padding-bottom: 40px;
	  }
	  .container{
		width: 100%;
		height: 100%;
		top: 0%;
		left: 0%;
		position: absolute;
	  }
	</style>
	<link href="stylesheets/bootstrap-responsive.css" rel="stylesheet">
	<link rel="stylesheet" type="text/css" href="./leaflet/leaflet.css">
  </head>
  <body>
	  <div class="navbar navbar-fixed-top">
	  <div class="navbar-inner">
		<div class="container"> 
		<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse"> 
		<span class="icon-bar"></span>
		<span class="icon-bar"></span> 
		<span class="icon-bar"></span>
		</a> 
		<a class="brand" href="/">Microblog</a>
		  <div class="nav-collapse">
			<ul class="nav">
			  <li class="active"><a href="/">首页</a></li>
			  <% if(!user){ %>
			  <li><a href="/login">登入</a></li>
			  <li><a href="/reg">注册</a></li>
			  <% } else { %>
			  <li><a href="/dotmap">点图</a></li>
			  <li><a href="/logout">登出</a></li>
			  <% } %>
			</ul>
		  </div>
		</div>
	  </div>
	</div>
	
    <div id="container" class="container">
	  <% if (success){%>
	    <div class=“alert alert-success">
		  <%= success %>
		</div>
	    <% } %>
		<% if (error) { %>
		  <div class="alert alert-error">
		   <%= error %>
		  </div>
		<% } %>
      <%- body %>
	  <hr />
	  <footer>
	    <p><a href="http://www.byvoid.com" target="_blank">1467001024</a>2012</p>
	  </footer>
    </div>
  </body>
  <script src="/javascripts/jquery.js"></script>
  <script src="/javascripts/bootstrap.js"></script>
  <script src="/javascripts/leaflet/leaflet.js"></script>
	  <script src="/javascripts/dat.gui.min.js"></script>
	  <script type="text/javascript">
		  
	  var map = L.map('map-container', {"center":[31.132901401103307,121.40098571777344],"zoom":10});
	  //var map = L.map('map-container', {"center":[30.142901401103307,120.41098571777344],"zoom":10});

	  //var tileLayer = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {foo: 'bar'}).addTo(map);
	  var tileLayer = L.tileLayer('http://webrd02.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=8&x={x}&y={y}&z={z}', {foo: 'bar'}).addTo(map);

	  var filterRange = [60000, 100000]
	  function rangeFilter(d){
		return d.avr_price > filterRange[0] && d.avr_price < filterRange[1]
	  }


	  var priceRange = [80000, 150000];
	  var circles = [];
	  //获取数据
	  fetch('/javascripts/house.json')
	  .then(function(response) {
		return response.json();
	  })      
	  .then(function(ds){
		ds
		.filter(function(d){
		  return d.lat && d.lng
		})
		.forEach(function(d){
		  var price = d.avr_price;
		  var priceMin = priceRange[0], priceMax = priceRange[1];
		  var price01 = getK(price, priceMin, priceMax);
		  var size = getSize(price01);
		  var color = getColor(price01);
		  if(!rangeFilter(d)) color = 'rgba(0,0,0,0)';

		  //
		  var circle = L.circleMarker({
			lat: d.lat,
			lng: d.lng
		  }, {
			stroke: false,
			fillColor: color
		  })
		  .addTo(map);
		  circle.setRadius(size);
		  circle.__data = d;
		  circle.bindPopup('小区名:' + d.community_name + '<br> 价格： ' + d.avr_price+'<br>经纬度:'+d.lng+' '+d.lat);
		  //
		  circles.push(circle);
		  //
		  // fireEvents(circle);
		});
	  });


	  // function fireEvents(circle){
	  //   circle
	  //   .on('click', function(){
	  //     circle.
	  //   })
	  // }
	  
	  //归一化
	  function getK(v, min, max){
		v = Math.max(Math.min(v, max), min);
		return (v - min) / (max - min);
	  }

	  //颜色字符串 -> 数组
	  function str2array(c){
		return c
		.replace('rgba(', '')
		.replace(')', '')
		.split(',')
		.map(function(v){
		  return parseFloat(v, 10);
		});
	  }

	  //颜色映射函数
	  var crange = ['rgba(0,0,250,0.9)', 'rgba(255,27,188,0.9)'];
	  function getColor(ki){
		var cminArray = str2array(crange[0]);
		var cmaxArray = str2array(crange[1]);
		//
		var r = Math.floor(cminArray[0] + (cmaxArray[0] - cminArray[0]) * ki);
		var g = Math.floor(cminArray[1] + (cmaxArray[1] - cminArray[1]) * ki);
		var b = Math.floor(cminArray[2] + (cmaxArray[2] - cminArray[2]) * ki);
		var a = cminArray[3] + (cmaxArray[3] - cminArray[3]) * ki;
		//
		return 'rgba(' + [r,g,b,a].join(',') + ')';
	  }

	  // 大小映射函数
	  var rrange = [2, 10]
	  function getSize(ki){
		var rmin = rrange[0], rmax = rrange[1];
		return rmin + (rmax - rmin) * ki;
	  }

	  //
	  function updateScatter(){
		circles.forEach(function(circle){
		  var d = circle.__data;
		  var price = d.avr_price;
		  var priceMin = priceRange[0], priceMax = priceRange[1];
		  var price01 = getK(price, priceMin, priceMax);
		  var size = getSize(price01);
		  var color = getColor(price01);
		  if(!rangeFilter(d)) color = 'rgba(0,0,0,0)';
		  circle.setRadius(size);
		  circle.setStyle({
			stroke: false,
			fillColor: color
		  });
		});
	  }

	  var gui = new dat.gui.GUI();
	  var p1 = gui.addFolder('颜色');
	  p1.addColor(crange, '0').name('最小值颜色').onChange(updateScatter);
	  p1.addColor(crange, '1').name('最大值颜色').onChange(updateScatter);
	  p1.add(rrange, '0', 0, 20).name('最小值大小').onChange(updateScatter);
	  p1.add(rrange, '1', 0, 50).name('最大值大小').onChange(updateScatter);

	  p1.add(filterRange, '0', 10000, 100000).name('过滤范围min').onChange(updateScatter);
	  p1.add(filterRange, '1', 10000, 300000).name('过滤范围max').onChange(updateScatter);
	  p1.open();

	  </script>
</html>